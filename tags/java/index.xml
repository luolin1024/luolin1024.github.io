<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Java on luolin1024</title>
    <link>https://luolin1024.github.io/tags/java/</link>
    <description>Recent content in Java on luolin1024</description>
    <generator>Hugo -- 0.114.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 21 Mar 2024 00:49:45 +0800</lastBuildDate>
    <atom:link href="https://luolin1024.github.io/tags/java/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>位图BitMap</title>
      <link>https://luolin1024.github.io/blog_prepublish/%E6%8A%80%E6%9C%AF%E6%8F%90%E5%8D%87/%E7%AE%97%E6%B3%95/%E4%BD%8D%E5%9B%BEbitmap/</link>
      <pubDate>Sun, 03 Mar 2024 17:49:55 +0800</pubDate>
      <guid>https://luolin1024.github.io/blog_prepublish/%E6%8A%80%E6%9C%AF%E6%8F%90%E5%8D%87/%E7%AE%97%E6%B3%95/%E4%BD%8D%E5%9B%BEbitmap/</guid>
      <description>&lt;h2 id=&#34;什么是bitmap&#34;&gt;什么是BitMap&lt;/h2&gt;
&lt;p&gt;BitMap算法的核心思想在于用bit数组记录0/1两种状态，然后再将具体数据映射到这个比特数组的具体位置，这个比特位表示数据存在或者数据不存在&lt;/p&gt;
&lt;h2 id=&#34;位图的实现&#34;&gt;位图的实现&lt;/h2&gt;
&lt;p&gt;目前主要可以使用JDK中的BitSet
Google开源的EWAHCompressedBitmap&lt;/p&gt;
&lt;h2 id=&#34;位图使用案例&#34;&gt;位图使用案例&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;给定10亿正数进行，没排过序的，然后再给一个数，如果快速判断是否在这10亿数据里面
&lt;ol&gt;
&lt;li&gt;解法：通过bitMap映射判断是否存在值&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;使用位图法进行元素不重复的正整形数组排序
&lt;ol&gt;
&lt;li&gt;解法，存入bitMap后，从小打到去除存在1的值&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;在2.5亿个整数中找出不重复的正整数，注，内存不足以容纳这2.5亿个整数
&lt;ol&gt;
&lt;li&gt;采用2-bitMap（每个数分配2bit，00表示存在，01表示出现1次，10表示多次，11无意义）&lt;/li&gt;
&lt;li&gt;采用两个bitmap，第一个bitmap标记是否第一次存在，第二个bitmap标记是否存在多次，如果只在第一个bitmap则表示存在1次，两个bitmap都存在则表示多次，两个bitmap都没有则表示没有值&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;在系统中给多名用户打多个标记，在拉取数据的时候可以通过这个标记直接获取结果，比如给三个人A、B、C分别标记程序员，产品经理和测试，那么在设计时就可以使用标记直接过去对应标记下的所有人&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
  </channel>
</rss>
